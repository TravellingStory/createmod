exports.templateCode = function(name){
    let templateCodes = {
        //页面头体编辑 示例代码
        editCode: '<PageHeader>'
            + '\r\n     <Btn class="BtnSave" value="保存" ng-click="btnSave()"></Btn>'
            + '\r\n     <Btn value="放弃" ng-click="btnCancel()"></Btn>'
            + '\r\n     <Btn class="BtnAdd" value="新增" ng-click="btnAdd()"></Btn>'
            + '\r\n     <BtnDelete okclick="btnDelete()"></BtnDelete>'
            + '\r\n     <BtnFind DisplayName="查找" WindowTitle="工单" module="Module.MO1" change="btnFindChange()">'
            + '\r\n         <FColumn type="0" width="80px" displayname="单号" valuefield="Code"></FColumn>'
            + '\r\n         <FColumn type="textbox" width="120px" displayname="物料" valuefield="ItemMaster.Name"></FColumn>'
            + '\r\n         <FColumn type="textbox" width="130px" displayname="料号" valuefield="ItemMaster.Code"></FColumn>'
            + '\r\n         <FColumn type="NumberBox" width="80px" displayname="生产数量" valuefield="ProdQty"></FColumn>'
            + '\r\n         <FColumn type="Calendar" width="166px" displayname="开工日期" valuefield="StartDate"></FColumn>'
            + '\r\n         <FColumn type="DropdownList" width="166px" displayname="状态" enum="MOStatusEnum" valuefield="Status"></FColumn>'
            + '\r\n     </BtnFind>'
            + '\r\n     <Btn value="列表" ng-click="btnList()"></Btn>'
            + '\r\n     <PageButton module="Module.MO1" afterturnpage="pageChange()"></PageButton>'
            + '\r\n     <Btn value="配送" ng-click="btnDist()"></Btn>'
            + '\r\n     </PageHeader>'
            + '\r\n<PageBody style="height:240px; margin-bottom: 0px;">'
            + '\r\n    <TextBox LabelName="单号" IsEmpty="false" value="Module.MO1.FocusedRecord.Code" isempty="false"></TextBox>'
            + '\r\n    <Refer isempty="false" LabelName="物料" EntityName="ItemMaster" change="ItemMasterChange()" WindowTitle="物料" value="Module.MO1.FocusedRecord.ItemMaster" beforeshow="btnFindMOItemMaster(refScope)">'
            + '\r\n        <RColumn type="0" width="150px" DisplayName="组织" valuefield="Org.Name"></RColumn>'
            + '\r\n        <RColumn type="textbox" width="150px" DisplayName="编码" valuefield="Code"></RColumn>'
            + '\r\n        <RColumn type="textbox" width="150px" DisplayName="名称" valuefield="Name"></RColumn>'
            + '\r\n        <RColumn type="dropdownlist" DisplayName="分类" width="150px" ValueField=&apos;ItemCategory&apos; Enum="ItemCategoryEnum"></RColumn>'
            + '\r\n        <RColumn DisplayName="规格" width="150px" ValueField="Specification"></RColumn>'
            + '\r\n    </Refer>'
            + '\r\n    <NumberBox IsEmpty="false" LabelName="生产数量" Round="{Precision: 5, RoundType: 2, RoundValue: 5}" value="Module.MO1.FocusedRecord.ProdQty" change="QtyChange()"></NumberBox>'
            + '\r\n    <Calendar LabelName="开工日期" value="Module.MO1.FocusedRecord.StartDate "></Calendar>'
            + '\r\n    <DropDownList LabelName="状态" value="Module.MO1.FocusedRecord.Status" Enabled="false" enum="MOStatusEnum"></DropDownList>'
            + '\r\n</PageBody>'
            + '\r\n<DataGrid module="Module.MOPick" isOrder="false" cellvaluechange="cellValueChange(columnName, newValue, oldValue) " cellclick="cellclick(columnName) ">'
            + '\r\n    <Column Type="NumberBox " DisplayName="行号 " IsEmpty="false " width="70px " ValueField="LineNo " IsEdit="false "></Column>'
            + '\r\n    <Column Type="TextBox " DisplayName="料号" width="120px " ValueField="ItemMaster.Code" IsEdit="false"></Column>'
            + '\r\n    <Column Type="Refer " EntityName="ItemMaster " IsEmpty="false " beforeshow="filterItemMaster(refScope) " DisplayName="物料 " width="154px " WindowTitle="物料 " ValueField="ItemMaster " Condition="{IsEffective: true} ">'
            + '\r\n        <RColumn type="0 " width="150px " DisplayName="组织" valuefield="Org.Name"></RColumn>'
            + '\r\n        <RColumn type="textbox" width="150px " DisplayName="编码 " valuefield="Code "></RColumn>'
            + '\r\n        <RColumn type="textbox " width="150px " DisplayName="名称 " valuefield="Name "></RColumn>'
            + '\r\n        <RColumn type="DropDownList " DisplayName="分类 " width="135px " ValueField=&apos;ItemCategory&apos; Enum="ItemCategoryEnum "></RColumn>'
            + '\r\n        <RColumn type="DropDownList " DisplayName="物料类型 " width="135px " ValueField=&apos;Type&apos; Enum="ItemTypeEnum "></RColumn>'
            + '\r\n        <RColumn DisplayName="规格 " width="150px " ValueField="Specif ication "></RColumn>'
            + '\r\n    </Column>'
            + '\r\n    <Column Type="NumberBox " minvalue="0 " Round="{Precision: &apos;Uom.Precision&apos;, RoundType: &apos;Uom.RoundType&apos;, RoundValue: &apos;Uom.RoundValue&apos;} " change="PlanQtyChange() " DisplayName="计划需求数量 " width="120px " ValueField="PlanQty "></Column>'
            + '\r\n    <Column Type="NumberBox " minvalue="0 " Round="{Precision: &apos;Uom.Precision&apos;, RoundType: &apos;Uom.RoundType&apos;, RoundValue: &apos;Uom.RoundValue&apos;} " DisplayName="实际需求数量 " width="120px " ValueField="ActualQty "></Column>'
            + '\r\n    <Column Type="Refer " EntityName="UOM " IsEmpty="false " DisplayName="单位 " width="100px " WindowTitle="计量单位 " ValueField="Uom " Condition="{IsEffective: true} ">'
            + '\r\n        <RColumn type="0 " width="150px " DisplayName="编码 " valuefield="Code "></RColumn>'
            + '\r\n        <RColumn type="textbox " width="150px " DisplayName="名称 " valuefield="Name "></RColumn>'
            + '\r\n    </Column>'
            + '\r\n    <Column Type="Calendar" DisplayName="需求时间" width="150px" ValueField="DemandDate"></Column>'
            + '\r\n    <Column Type="DropDownList " DisplayName="配送类型 " width="80px " ValueField=&apos;DistType&apos; Enum="DistTypeEnum " IsEdit="false "></Column>'
            + '\r\n</DataGrid>',
        //列表页面 示例代码    
        listCode: '<PageHeader>'
                +'\r\n  <Btn class="BtnAdd" value="新增" ng-click="btnAdd()"></Btn>'
                +'\r\n  <BtnDelete okclick="btnDelete()"></BtnDelete>'
                +'\r\n</PageHeader>'
                +'\r\n<DataGrid module="Module.MO1" rowdblclick="rowDblClick()" isedit="false" IsSelect="true" turnpage="pageChange()" pageSize="200">'
                + '\r\n     <Column Type="TextBox" DisplayName="单号" width="150px" ValueField="Code"></Column>'
                + '\r\n     <Column Type="TextBox" DisplayName="料号" width="150px" ValueField="ItemMaster.Code"></Column>'
                + '\r\n     <Column Type="NumberBox" Round="{Precision: &apos;ProductUom.Precision&apos;, RoundType: &apos;ProductUom.RoundType&apos;, RoundValue: &apos;ProductUom.RoundValue&apos;}" DisplayName="生产数量" width="70px" ValueField="ProdQty"></Column>'
                + '\r\n     <Column Type="Calendar" DisplayName="开工日期" width="150px" ValueField="StartDate"></Column>'
                + '\r\n     <Column Type="DropDownList" DisplayName="状态" width="60px" ValueField=&apos;Status&apos; Enum="MOStatusEnum"></Column>'
                +'\r\n</DataGrid>',
    
        //编辑页面逻辑代码样例        
        editController: 
        "'use strict'"
        + "\r\n"
        + "\r\nangular.module('"+name+"')"
        + "\r\n    .controller('MO1Controller', ['$scope', '$stateParams', 'BaseModule', 'BaseFunction', 'ExtendEnum', '$location', 'BaseEnum', 'MO1Enum', 'Context', 'MO1Service',"
        + "\r\n"
        + "\r\n        function($scope, $stateParams, BaseModule, BaseFunction, ExtendEnum, $location, BaseEnum, MO1Enum, Context, MO1Service) {"
        + "\r\n            // 固定枚举"
        + "\r\n            $scope.MOStatusEnum = MO1Enum.Status;"
        + "\r\n            $scope.DistTypeEnum = MO1Enum.DistType;"
        + "\r\n"
        + "\r\n            // 自定义枚举"
        + "\r\n            ExtendEnum.getExtendEnum('ItemCategory', function(extendEnum) {"
        + "\r\n                $scope.ItemCategoryEnum = extendEnum;"
        + "\r\n            });"
        + "\r\n"
        + "\r\n            // 保存"
        + "\r\n            $scope.btnSave = function() {"
        + "\r\n                // 只对MO1进行保存"
        + "\r\n                // $scope.Module.MO1.save();"
        + "\r\n                let focusedRecord = $scope.Module.MO1.FocusedRecord;"
        + "\r\n                if (!focusedRecord.Code) {"
        + "\r\n                    BaseFunction.alert('单号不能为空，请输入！', '保存');"
        + "\r\n                    return;"
        + "\r\n                }"
        + "\r\n"
        + "\r\n                if (!focusedRecord.ItemMaster) {"
        + "\r\n                    BaseFunction.alert('物料不能为空，请输入！', '保存');"
        + "\r\n                    return;"
        + "\r\n                }"
        + "\r\n"
        + "\r\n                if (focusedRecord.ProdQty == undefined || focusedRecord.ProdQty == null) {"
        + "\r\n                    BaseFunction.alert('生产数量不能为空，请输入！', '保存');"
        + "\r\n                    return;"
        + "\r\n                }"
        + "\r\n"
        + "\r\n                let moPicks = $scope.Module.MOPick.Records;"
        + "\r\n                for (let i = 0, len = moPicks.length; i < len; i++) {"
        + "\r\n                    let mopick = moPicks[i];"
        + "\r\n                    if (!mopick.ItemMaster) {"
        + "\r\n                        BaseFunction.alert('物料不能为空，请输入！', '保存');"
        + "\r\n                        return;"
        + "\r\n                    }"
        + "\r\n                    if (!mopick.Uom) {"
        + "\r\n                        BaseFunction.alert('单位不能为空，请输入！', '保存');"
        + "\r\n                        return;"
        + "\r\n                    }"
        + "\r\n"
        + "\r\n                    if (mopick.PlanQty == undefined || mopick.PlanQty == NaN) {"
        + "\r\n                        BaseFunction.alert('计划数量不能为空，请输入！', '保存');"
        + "\r\n                        return;"
        + "\r\n                    }"
        + "\r\n"
        + "\r\n                    if (mopick.ActualQty == undefined || mopick.ActualQty == NaN) {"
        + "\r\n                        BaseFunction.alert('实际数量不能为空，请输入！', '保存');"
        + "\r\n                        return;"
        + "\r\n                    }"
        + "\r\n                }"
        + "\r\n"
        + "\r\n                $scope.Module.save();"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 新增"
        + "\r\n            $scope.btnAdd = function() {"
        + "\r\n                $scope.Module.MO1.add();"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 删除"
        + "\r\n            $scope.btnDelete = function() {"
        + "\r\n                $scope.Module.MO1.delete();"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 放弃"
        + "\r\n            $scope.btnCancel = function() {"
        + "\r\n                $scope.Module.MO1.cancel();"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 列表"
        + "\r\n            $scope.btnList = function() {"
        + "\r\n                $location.url('/index/Custom/MO1List/List');"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 配送"
        + "\r\n            $scope.btnDist = function() {"
        + "\r\n                // let focusedRecord = $scope.Module.MOPick.FocusedRecord;"
        + "\r\n                // focusedRecord.DistType = $scope.DistTypeEnum.Distribute.Value;"
        + "\r\n                // focusedRecord.RowStatus = BaseEnum.RowStatus.Modify.Value;"
        + "\r\n                // $scope.btnSave();"
        + "\r\n                let focusedRecord = $scope.Module.MO1.FocusedRecord;"
        + "\r\n                MO1Service.distMOPick(focusedRecord._id).then(function(data) {"
        + "\r\n                    if (data.Data) {"
        + "\r\n                        $scope.Module.MO1.findById(focusedRecord._id, function(record) {"
        + "\r\n                            $scope.Module.MO1.FocusedRecord = record;"
        + "\r\n                            $scope.Module.MOPick.find({ MO1: focusedRecord._id }, function(picks) {"
        + "\r\n                                $scope.Module.MOPick.Records = picks;"
        + "\r\n                            });"
        + "\r\n                            BaseFunction.alert('备料已配送', '已配送提示');"
        + "\r\n                        });"
        + "\r\n                    } else {"
        + "\r\n                        BaseFunction.alert(data.Error.message);"
        + "\r\n                    }"
        + "\r\n                }).catch(function(error) {"
        + "\r\n                    BaseFunction.alert(error.message);"
        + "\r\n                });"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            $scope.btnFindMOItemMaster = function(refscope) {"
        + "\r\n                refscope.Condition = {"
        + "\r\n                    IsEffective: true"
        + "\r\n                };"
        + "\r\n"
        + "\r\n                refscope.Populate = [{"
        + "\r\n                    path: 'Org',"
        + "\r\n                    select: 'Code Name',"
        + "\r\n                    model: 'Org'"
        + "\r\n                }];"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 自定义Model，一般用于查询用"
        + "\r\n            // BaseModule.initModule($scope, '_MO1');"
        + "\r\n            BaseModule.initModule($scope, 'MO1');"
        + "\r\n            $scope.Module.MO1.Condition = { Org: Context.Org._id };"
        + "\r\n            $scope.Module.MO1.Populate = [{"
        + "\r\n                path: 'ItemMaster',"
        + "\r\n                select: 'Code Name',"
        + "\r\n                model: 'ItemMaster'"
        + "\r\n            }, {"
        + "\r\n                path: 'Org',"
        + "\r\n                select: 'Code Name',"
        + "\r\n                model: 'Org'"
        + "\r\n            }];"
        + "\r\n            // 新增后事件 赋默认值"
        + "\r\n            $scope.Module.MO1.AfterOnAdd = function(record) {"
        + "\r\n                record.Status = MO1Enum.Status.UnConfirm.Value;"
        + "\r\n                record.Org = Context.Org._id;"
        + "\r\n            }"
        + "\r\n"
        + "\r\n            $scope.QtyChange = function() {"
        + "\r\n                let focusedRecord = $scope.Module.MO1.FocusedRecord;"
        + "\r\n                let moPicks = $scope.Module.MOPick.Records;"
        + "\r\n                for (let i = 0, len = moPicks.length; i < len; i++) {"
        + "\r\n                    let mopick = moPicks[i];"
        + "\r\n                    mopick.PlanQty = focusedRecord.ProdQty;"
        + "\r\n                    mopick.ActualQty = focusedRecord.ProdQty;"
        + "\r\n                    $scope.Module.MOPick.emitRowsDataChangeEvent([$scope.Module.MOPick.Records[i]]);"
        + "\r\n                }"
        + "\r\n"
        + "\r\n            }"
        + "\r\n"
        + "\r\n            $scope.cellValueChange = function(columnName, newValue, oldValue) {"
        + "\r\n                let focusedRecord = $scope.Module.MOPick.FocusedRecord;"
        + "\r\n                if (columnName == 'PlanQty') {"
        + "\r\n                    focusedRecord.ActualQty = newValue;"
        + "\r\n                }"
        + "\r\n                $scope.Module.MOPick.emitRowsDataChangeEvent([$scope.Module.MOPick.FocusedRecord]);"
        + "\r\n            }"
        + "\r\n"
        + "\r\n            $scope.cellclick = function(columnName) {"
        + "\r\n                let focusedRecord = $scope.Module.MOPick.FocusedRecord;"
        + "\r\n                if (focusedRecord.DistType == $scope.DistTypeEnum.Distribute.Value) {"
        + "\r\n                    if (columnName == 'PlanQty' || columnName == 'ActualQty' ||"
        + "\r\n                        columnName == 'ItemMaster' || columnName == 'Uom') {"
        + "\r\n                        return false;"
        + "\r\n                    }"
        + "\r\n                } else {"
        + "\r\n                    return true;"
        + "\r\n                }"
        + "\r\n            }"
        + "\r\n"
        + "\r\n            $scope.filterItemMaster = function(refScope) {"
        + "\r\n                refScope.Populate = [{"
        + "\r\n                    path: 'Org',"
        + "\r\n                    select: 'Code Name',"
        + "\r\n                    model: 'Org'"
        + "\r\n                }]"
        + "\r\n            }"
        + "\r\n"
        + "\r\n            BaseModule.initModule($scope, 'MOPick');"
        + "\r\n            $scope.Module.MOPick.LoadMode = BaseEnum.LoadMode.CacheAndPaging;"
        + "\r\n            $scope.Module.MOPick.PageSize = 20;"
        + "\r\n            $scope.Module.MOPick.ParentModule = $scope.Module.MO1;"
        + "\r\n            $scope.Module.MOPick.Populate = [{"
        + "\r\n                    path: 'ItemMaster',"
        + "\r\n                    select: 'Code Name',"
        + "\r\n                    model: 'ItemMaster',"
        + "\r\n                    populate: ["
        + "\r\n                        { path: 'Org', select: 'Code Name', model: 'Org' }"
        + "\r\n                    ]"
        + "\r\n                },"
        + "\r\n                {"
        + "\r\n                    path: 'Uom',"
        + "\r\n                    select: 'Code Name Precision RoundType RoundValue',"
        + "\r\n                    model: 'UOM'"
        + "\r\n                }"
        + "\r\n            ];"
        + "\r\n            $scope.Module.MOPick.AfterOnAdd = function(record) {"
        + "\r\n                var maxLineValue = 0;"
        + "\r\n                for (var i = 0; i < $scope.Module.MOPick.Records.length; i++) {"
        + "\r\n                    if ($scope.Module.MOPick.Records[i].LineNo !== '' &&"
        + "\r\n                        $scope.Module.MOPick.Records[i].LineNo !== undefined &&"
        + "\r\n                        $scope.Module.MOPick.Records[i].LineNo > maxLineValue) {"
        + "\r\n                        maxLineValue = $scope.Module.MOPick.Records[i].LineNo;"
        + "\r\n                    }"
        + "\r\n                }"
        + "\r\n                record.LineNo = maxLineValue + 10;"
        + "\r\n                record.DistType = $scope.DistTypeEnum.UnDistribute.Value;"
        + "\r\n                record.PlanQty = 0;"
        + "\r\n                record.ActualQty = 0;"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            if ($stateParams.id) {"
        + "\r\n                $scope.Module.MO1.findById($stateParams.id, function(record) {"
        + "\r\n                    $scope.Module.MO1.FocusedRecord = record;"
        + "\r\n                    $scope.Module.MO1.Records = [record]; //特殊处理，不然会导致列表跳转过来修改数据没法保存上"
        + "\r\n                });"
        + "\r\n            } else {"
        + "\r\n                $scope.btnAdd();"
        + "\r\n            }"
        + "\r\n        }"
        + "\r\n    ])",


        //列表页面逻辑代码样例
        listController: 
        "'use strict';"
        + "\r\n"
        + "\r\nangular.module('"+name+"')"
        + "\r\n    .controller('MO1ListController', ['$scope', '$stateParams', 'BaseModule', 'BaseFunction', 'ExtendEnum', '$location', 'BaseEnum', 'MO1Enum', 'Context',"
        + "\r\n"
        + "\r\n        function($scope, $stateParams, BaseModule, BaseFunction, ExtendEnum, $location, BaseEnum, MO1Enum, Context) {"
        + "\r\n"
        + "\r\n            $scope.MOStatusEnum = MO1Enum.Status;"
        + "\r\n            // 新增"
        + "\r\n            $scope.btnAdd = function() {"
        + "\r\n                $location.url('/index/Custom/MO1/Edit');"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 删除"
        + "\r\n            $scope.btnDelete = function() {"
        + "\r\n                $scope.Module.MO1.deleteSelecteds();"
        + "\r\n            };"
        + "\r\n            $scope.rowDblClick = function() {"
        + "\r\n                $scope.$apply(function() {"
        + "\r\n                    $location.url('/index/Custom/MO1/Edit/' + $scope.Module.MO1.FocusedRecord._id);"
        + "\r\n                });"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            // 自定义Model，一般用于查询用"
        + "\r\n            // BaseModule.initModule($scope, '_MO1');"
        + "\r\n            BaseModule.initModule($scope, 'MO1');"
        + "\r\n            $scope.Module.MO1.PageSize = 20;"
        + "\r\n            $scope.Module.MO1.LoadMode = BaseEnum.LoadMode.CacheAndPaging;"
        + "\r\n            $scope.Module.MO1.Condition = { Org: Context.Org._id };"
        + "\r\n            $scope.Module.MO1.Populate = [{"
        + "\r\n                path: 'ItemMaster',"
        + "\r\n                select: 'Code Name',"
        + "\r\n                model: 'ItemMaster'"
        + "\r\n            }, {"
        + "\r\n                path: 'Org',"
        + "\r\n                select: 'Code Name',"
        + "\r\n                model: 'Org'"
        + "\r\n            }];"
        + "\r\n        }"
        + "\r\n    ])",

        //前端调用接口样例代码
        serviceContent: 
        "'use strict';"
        + "\r\n"
        + "\r\n//调用服务端接口"
        + "\r\nangular.module('"+name+"')"
        + "\r\n    .service('MO1Service', ['$http', '$q',"
        + "\r\n        function($http, $q) {"
        + "\r\n            return {"
        + "\r\n                distMOPick: distMOPick"
        + "\r\n            };"
        + "\r\n"
        + "\r\n            function distMOPick(mo) {"
        + "\r\n                var deferred = $q.defer();"
        + "\r\n                $http({"
        + "\r\n                    method: 'POST',"
        + "\r\n                    url: '/api/MO1/httpDistributeMOPick',"
        + "\r\n                    data: {"
        + "\r\n                        MO: mo"
        + "\r\n                    }"
        + "\r\n                }).then(function(data) {"
        + "\r\n                    deferred.resolve(data.data);"
        + "\r\n                }, function(err) {"
        + "\r\n                    deferred.reject(err);"
        + "\r\n                });"
        + "\r\n                return deferred.promise;"
        + "\r\n            }"
        + "\r\n        }"
        + "\r\n    ])",

        //实体示例 父实体        
        modelCode1: "'use strict';"
                    +"\r\n\r\nvar Schema = require('mongoose').Schema,"
                    +"\r\n    Enum = require('../controller/Enum.server.controller'),"
                    +"\r\n    Model = require('../../../../Base/server/controllers/Model');"
                    +"\r\n"
                    +"\r\n//字段"
                    +"\r\nvar modelField = {"
                    +"\r\n    Code: {"
                    +"\r\n        type: String,"
                    +"\r\n        Name: '编码',"
                    +"\r\n        IsEmpty: false"
                    +"\r\n    },"
                    +"\r\n    ProdQty: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '生产数量'"
                    +"\r\n    },"
                    +"\r\n    ItemMaster: {"
                    +"\r\n        type: Schema.ObjectId,"
                    +"\r\n        ref: 'ItemMaster',"
                    +"\r\n        Name: '物料'"
                    +"\r\n    },"
                    +"\r\n    StartDate: {"
                    +"\r\n        type: Date,"
                    +"\r\n        Name: '开工时间'"
                    +"\r\n    },"
                    +"\r\n    // 枚举类型"
                    +"\r\n    Status: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '状态',"
                    +"\r\n        Enum: Enum.Status"
                    +"\r\n    },"
                    +"\r\n    Org: {"
                    +"\r\n        type: Schema.ObjectId,"
                    +"\r\n        ref: 'Org',"
                    +"\r\n        Name: '组织'"
                    +"\r\n    }"
                    +"\r\n};"
                    +"\r\n"
                    +"\r\nvar newModel = new Model(modelField);"
                    +"\r\n//索引"
                    +"\r\nnewModel.addIndex({ Code: 1 }, { 'unique': true });"
                    +"\r\n//创建"
                    +"\r\nnewModel.create('MO1', '生产订单');",

        //实体示例  子实体            
        modelCode2: "'use strict';"
                    +"\r\n\r\nvar Schema = require('mongoose').Schema,"
                    +"\r\n    Model = require('../../../../Base/server/controllers/Model');"
                    +"\r\n"
                    +"\r\n//字段"
                    +"\r\nvar modelField = {"
                    +"\r\n    LineNo: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '行号'"
                    +"\r\n    },"
                    +"\r\n    MO1: {"
                    +"\r\n        type: Schema.ObjectId,"
                    +"\r\n        ref: 'MO1',"
                    +"\r\n        Name: '生产订单'"
                    +"\r\n    },"
                    +"\r\n    PlanQty: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '计划数量'"
                    +"\r\n    },"
                    +"\r\n    ActualQty: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '实际数量'"
                    +"\r\n    },"
                    +"\r\n    ItemMaster: {"
                    +"\r\n        type: Schema.ObjectId,"
                    +"\r\n        ref: 'ItemMaster',"
                    +"\r\n        Name: '物料'"
                    +"\r\n    },"
                    +"\r\n    DemandDate: {"
                    +"\r\n        type: Date,"
                    +"\r\n        Name: '需求时间'"
                    +"\r\n    },"
                    +"\r\n    DistType: {"
                    +"\r\n        type: Number,"
                    +"\r\n        Name: '配送状态'"
                    +"\r\n    },"
                    +"\r\n    Uom: {"
                    +"\r\n        type: Schema.ObjectId,"
                    +"\r\n        ref: 'UOM',"
                    +"\r\n        Name: '单位'"
                    +"\r\n    }"
                    +"\r\n};"
                    +"\r\n"
                    +"\r\nvar newModel = new Model(modelField);"
                    +"\r\nnewModel.create('MOPick', '生产订单备料', 'MOPick', 'MO1');",
        
        //server服务 逻辑代码示例
        serverController: 
        "const entityFun = require('../../../../Base/server/controllers/EntityFunction'),"
        + "\r\ncommonCtrl = require('../../../../CBO/server/controllers/CommonFun.server.controller'),"
        + "\r\nEnum = require('./Enum.server.controller'),"
        + "\r\nBaseEnum = require('../../../../Base/server/controllers/Enum');"
        + "\r\n"
        + "\f\n"
        + "\r\nexports.httpDistributeMOPick = async function(req, res) {"
        + "\r\n    let param = req.body;"
        + "\r\n"
        + "\r\n    try {"
        + "\r\n        let data = await distbuteMOPick(param.MO);"
        + "\r\n        res.json({"
        + "\r\n            Data: data,"
        + "\r\n            Error: null"
        + "\r\n        })"
        + "\r\n    } catch (error) {"
        + "\r\n        throw error;"
        + "\r\n    }"
        + "\r\n}"
        + "\r\n"
        + "\r\nasync function distbuteMOPick(mo) {"
        + "\r\n    let trans = [];"
        + "\r\n    let mopickList = [];"
        + "\r\n    let moPicks = await commonCtrl.find({ MO1: mo }, null, null, 'MOPick');"
        + "\r\n    if (moPicks.length > 0) {"
        + "\r\n        for (let i = 0, len = moPicks.length; i < len; i++) {"
        + "\r\n            let mopick = moPicks[i];"
        + "\r\n            if (mopick.DistType != Enum.DistType.Distribute.Value) {"
        + "\r\n                mopick.DistType = Enum.DistType.Distribute.Value;"
        + "\r\n                mopick.RowStatus = BaseEnum.RowStatus.Modify.Value;"
        + "\r\n                mopickList.push(mopick);"
        + "\r\n            }"
        + "\r\n        }"
        + "\r\n        if (mopickList.length > 0) {"
        + "\r\n            trans.push({ EntityName: 'MOPick', Records: mopickList });"
        + "\r\n        }"
        + "\r\n    }"
        + "\r\n"
        + "\r\n    if (trans.length > 0) {"
        + "\r\n        try {"
        + "\r\n            return await commonCtrl.transactionSave(trans);"
        + "\r\n        } catch (error) {"
        + "\r\n            throw error;"
        + "\r\n        }"
        + "\r\n    }"
        + "\r\n}"
    };
    return templateCodes;
}